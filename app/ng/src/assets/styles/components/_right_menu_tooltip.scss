.right-menu-tooltip {
	border-radius: $border-radius-base;
	box-shadow: 0 12px 12px rgba(0, 0, 0, 0.12);

	@include mq(sm){
		border-radius: 0;
		box-shadow: none;
	}
	
	&__scroll-container {
		@include mq(sx) {
			max-height: calc(100vh - #{map_get($mq-container-indents, "sx")} - #{map_get($mq-container-indents, "sm")});
			border-radius: $border-radius-base;
			overflow-x: hidden;
			overflow-y: auto;
		}
	}

	&__inner {
		border-radius: $border-radius-base;
		border: 1px solid rgba(0, 0, 0, 0.07);
		background: $color-lightest-border;
		overflow: hidden;

		@include mq(sm){
			border-radius: 0;
			border: none;
		}

		&--padding-bottom {
			@include mq(sm){
				padding-bottom: map_get($mq-container-indents, "sx") / 8 * 3;
			}
		}
	}

	&__cluster {
		@include text-base(500);
		padding: map_get($mq-container-indents, "sx") / 8 0;

		background: #ffffff;

		@include mq(sm){
			@include text-base-big(500);

			padding: 0;
		}

		& + & {
			margin-top: .1rem;

			@include mq(sm){
				margin-top: map_get($mq-container-indents, "sx") / 4;
			}
		}
	}

	&__item {

		&:not(:first-child) {
			@include mq(sm){
				border-top: 1px solid $color-lightest-border;
			}
		}

		>span,
		> a {
			@include text-base(500);
			@include interact(text-decoration, underline);

			display: flex;
			justify-content: space-between;
			align-items: center;
			padding: 0 map_get($mq-container-indents, "sx") / 4;
			height: 3.6rem;
			width: 100%;

			@include mq(sm){
				@include text-base-big(500);

				height: map_get($mq-container-indents, "sx");
			}

			&[data-icon="left"] {
				justify-content: start;

				.icon {
					margin-right: 1.2rem;
				}
			}

			&[data-counter] {

				&::after {
					@include font(14px);

					font-weight: 500;
					padding: .3rem .4rem;
					border-radius: 10px;
					background: $brand-sky;
					color: #fff;
					content: attr(data-counter);

					[data-color-type="vtb"] & {
						background: $brand-vtb-red;
					}
				}
			}
		}

		.icon {

			&[data-gift] {
				position: relative;

				.white {
					position: absolute;
					top: 50%;
					left: 50%;
					transform: translate(-50%, -50%);
				}
			}

			&[data-rotate]{
				transform: rotate(180deg);
			}
		}

		.grey-text {
			@include font(1.4rem, 1.6rem);

			display: block;
			color: $color-placeholder;

			&--dark {
				color: $color-lighter;
			}
		}
	}
}
